# === Dependencies ===

# trash-cli
# xclip

# === Config ===
set hidden true
set info size:atime
set drawbox


# === Binding ===
 
# hjkl -> ctsr
map c updir # old h
map t down  # old j 
map s up    # old k  
map r open  # old l

# tsrl -> ***l 
map h # unmap
map j # unmap
map k # unmap
map l rename # old l
map kn :set sortby natural; set info
map ks :set sortby size; set info size
map kt :set sortby time; set info time
map ka :set sortby atime; set info atime
map kc :set sortby ctime; set info ctime
map ke :set sortby ext; set info

# others
map D trash 
map <c-c> clear
map ` mark-load
map m mark-save

# custom commands binding
map a push :mkdir<space>
map o push :open-with<space>
map b show-selection
#map x push :yank-dirname<enter>
map <c-p> push :yank-path<enter>
map É push :yank-basename<enter>
map é push :yank-basename-without-extension<enter>

# === Commands ====

# show selection
#cmd show-selection %echo "$fx" > ~/lf-test.txt
#cmd show-selection %echo "$fx" > ~/lf-test.txt
#cmd show-selection $printf "$fx" | sed 's/\r/" "/' > ~/lf-test.txt
#cmd show-selection $awk -v d="xx xx" '{s=(NR==1?s:s d)$0}END{print s}' "$fx" > ~/lf-test.txt
#cmd show-selection $printf "$fx" | tr -d '\r' "$fx" > ~/lf-test.txt
#cmd show-selection ${{
#    "$fx" | %sed s/\r/" "/ > ~/lf-test.txt
#}}
cmd show-selection ${{
    filesList=($printf '%s' "%fx")
    joinList=$(awk -v d="xx xx" '{s=(NR==1?s:s d)$0}END{print s}' $filesList)
    #echo $fx >> lf-result2.txt
    echo $filesList > lf-result.txt
    echo $joinList > lf-result2.txt
}}

# move current file or selected files to trash folder
#cmd trash %set -f; mv $fx ~/.Trash/
#cmd trash %trash-put "$fx"
cmd trash ${{
    set -f
    printf "$fx\n"
    printf "delete?[y/n]"

    printf "\n"

    pathList="'"$(echo "$fx" | awk -v d="' '" '{s=(NR==1?s:s d)$0}END{print s}')"'"

    echo $pathList
    

    #filesList=`printf "$fx\n"`
    #joinList=$(awk -v d="' '" '{s=(NR==1?s:s d)$0}END{print s}' $filesList)
    #printf $filesList
    
    read ans
    #[ $ans = "y" ] && trash-put "$fx"
    [ $ans = "y" ] && trash-put $pathList
}}

# make directories
#map a push %mkdir<space>
cmd mkdir %mkdir -p "$@"

# open with
cmd open-with %"$@" $fx

# copy dirname, path, basename, ... (use xclip)
#cmd yank-dirname $dirname -- "$f" | head -c-1 | xclip -i -selection clipboard
cmd yank-path $printf '%s' "$fx" | xclip -i -selection clipboard
cmd yank-basename $basename -a -- $fx | head -c-1 | xclip -i -selection clipboard
cmd yank-basename-without-extension &basename -a -- $fx | rev | cut -d. -f2- | rev | head -c-1 | xclip -i -selection clipboard

